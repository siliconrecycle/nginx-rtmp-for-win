
worker_processes  4;
error_log  logs/error.log;
pid        logs/nginx.pid;
pcre_jit   on;

events {
    worker_connections  16384;
}

http {
    include      /nginx/conf/naxsi_core.rules;
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      off;
    ssl_session_cache shared:SSL:10m;

    fastcgi_cache_path /caching/fastcgi_cache levels=1:2 keys_zone=microcache:10m max_size=1024m inactive=1h;
    fastcgi_temp_path /caching/fastcgi_temp;

    vhost_traffic_status_zone shared:vhts:10m;

    server_names_hash_bucket_size   128;
    map_hash_bucket_size            64;
    client_body_buffer_size         5K;
    client_header_buffer_size       5k;
    client_max_body_size            256m;
    large_client_header_buffers     4 64k;
    client_body_timeout             10;
    client_header_timeout           10;
    send_timeout                    10;
    keepalive_timeout               60;
    keepalive_requests              128;

    lua_shared_dict iworkcomproto 1m;
    init_worker_by_lua_file conf/iworkcomproto.lua;

    limit_conn_zone $binary_remote_addr zone=addr:20m;
    limit_req_zone $binary_remote_addr zone=flooda:10m rate=128r/s;
    limit_req_zone $binary_remote_addr zone=floodp:10m rate=64r/s;
    limit_req_zone $binary_remote_addr zone=floodh:10m rate=64r/s;
    limit_req_zone $binary_remote_addr zone=floodd:10m rate=256r/s;
    limit_conn addr 100;

    log_format  main  '[$time_local] $remote_addr $remote_port - $remote_user $scheme "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $upstream_cache_status';

    map $request_uri $loggablevhts {
        default                     1;
        /ngxvtstatus                0;  # zero=do not log
        /vtsvalues.js               0;  # zero=do not log
        /vtsvalues-eop.js           0;  # zero=do not log
        /ngxvtstatus/format/json    0;  # zero=do not log
    }
    map $remote_addr $lcladdrvhts {
        default                   1;
        ~^(192.168.2.*)$          0;
    }
    # don't log vhts entries when request is local or from management interface
    map $loggablevhts$lcladdrvhts $loggable {
        default                     0;
        ~1                          1;
    }

    access_log  logs/access.log  main if=$loggable;

    tcp_nodelay on;

    ## Compression
    gzip              on;
    gzip_buffers      16 8k;
    gzip_comp_level   4;
    gzip_http_version 1.0;
    gzip_min_length   1024;
    gzip_proxied      any;
    gzip_disable      "MSIE [1-6]\.(?!.*SV1)";
    gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/bmp;
    gzip_vary         on;

    # loadbalancing        
    upstream myLoadBalancer {
        server 127.0.0.1:2301 weight=1 fail_timeout=5;
        server 127.0.0.1:2302 weight=1 fail_timeout=5;
        server 127.0.0.1:2303 weight=1 fail_timeout=5;
        server 127.0.0.1:2304 weight=1 fail_timeout=5;
        server 127.0.0.1:2305 weight=1 fail_timeout=5;
        server 127.0.0.1:2306 weight=1 fail_timeout=5;
        server 127.0.0.1:2307 weight=1 fail_timeout=5;
        server 127.0.0.1:2308 weight=1 fail_timeout=5;
        server 127.0.0.1:2309 weight=1 fail_timeout=5;
        server 127.0.0.1:2310 weight=1 fail_timeout=5;
        least_conn;
    }
#
    error_page   500 502 504  /50x.html;
    error_page   503  /503flood.html;
#
    include nginx-simple-WAF.conf;
#
    map $remote_addr $lcladdr {
        default            0;
        ~^(127.0.0.*)$     1;
        ~^(192.168.2.*)$   1;
    }
#
    map $scheme $valscheme {
        default   1;
        https     0;
    }
#
    map $request_uri $requri {
        default   1;
        /         0;
    }
#
    map $http_accept_language $sublang {
        default   '';
        ~*nl      '-nl';
        ~*de      '-de';
    }
    map $http_accept_language $sublang1 {
        default   0;
        ~*nl      1;
        ~*de      1;
    }
    map $request_uri $sublang2 {
        default   0;
        /         $sublang1;
    }
#########################################################################################
### Virtual Hosts
    server {
        listen       80;
        server_name  forums.ecsystems.nl;
        access_log   logs/forums.ecsystems.nl.access.log  main;
        error_log    logs/forums.ecsystems.nl.error.log;
        root   '/webroot/forums.ecsystems.nl';
        return 301 https://forums.ecsystems.nl$request_uri;
    }

    server {
      listen 80;
      server_name nginx-win.ecsds.eu nginxwin.ecsds.eu winnginx.ecsds.eu win-nginx.ecsds.eu;
      access_log   logs/nginx-win.ecsds.eu.access.log  main;
      error_log    logs/nginx-win.ecsds.eu.error.log;
      root   '/webroot/nginx-win.ecsds.eu';
      # Caching Static Files
      location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 14d;
        add_header Vary Accept-Encoding;
      }
      location / {
        if ($http_referer ~* (\.exe)) { return 403; }
        if ($http_referer ~* (\.dll)) { return 403; }
        if ($waffable) { error_page 412 @412fart; return 412; }
        if ($sublang2) { rewrite ^(.*)$ /index$sublang.html break; }
        autoindex on;
        autoindex_localtime on;
        index  index.html index.htm;
       	limit_req zone=floodh burst=64 nodelay;
      }
      location /scripts {
        autoindex off;
        try_files $uri $uri/ =404;
        location ~ \.php$ {
          autoindex off;
          try_files $uri $uri/ =404;
          limit_req zone=floodp burst=64 nodelay;
          fastcgi_ignore_client_abort on;
          fastcgi_pass   myLoadBalancer;
          fastcgi_index  index.php;
          fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
          include        fastcgi_params;
        }
      }
      location = /50x.html { root html; internal; }
      location = /503flood.html { root html; rewrite ^ /503flood.html break; }
      location @412fart { root html; rewrite ^ /412fart.html break; }
    }

    server {
      listen 443 ssl http2 proxy_protocol;
      server_name nginx-win.ecsds.eu nginxwin.ecsds.eu winnginx.ecsds.eu win-nginx.ecsds.eu;
      set_real_ip_from 192.168.2.30;
      real_ip_header proxy_protocol;
      ssl_certificate /nginx/crtsfr/ecsg.cert;
      ssl_certificate_key /nginx/crtsfr/ecsg.key;
      include /nginx/conf/sslciphers.conf;
      gzip off;
      access_log   logs/nginx-win.ssl.ecsds.eu.access.log  main;
      error_log    logs/nginx-win.ssl.ecsds.eu.error.log;
      root   '/webroot/nginx-win.ecsds.eu';
      # Caching Static Files
      location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 14d;
        add_header Vary Accept-Encoding;
      }
      location / {
        if ($http_referer ~* (\.exe)) { return 403; }
        if ($http_referer ~* (\.dll)) { return 403; }
        if ($waffable) { error_page 412 @412fart; return 412; }
        if ($sublang2) { rewrite ^(.*)$ /index$sublang.html break; }
        autoindex on;
        autoindex_localtime on;
        index  index.html index.htm;
       	limit_req zone=floodh burst=64 nodelay;
      }
      location /scripts {
        autoindex off;
        try_files $uri $uri/ =404;
        location ~ \.php$ {
          autoindex off;
          try_files $uri $uri/ =404;
          limit_req zone=floodp burst=64 nodelay;
          fastcgi_ignore_client_abort on;
          fastcgi_pass   myLoadBalancer;
          fastcgi_index  index.php;
          fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
          include        fastcgi_params;
        }
      }
      location = /50x.html { root html; internal; }
      location = /503flood.html { root html; rewrite ^ /503flood.html break; }
      location @412fart { root html; rewrite ^ /412fart.html break; }
    }

}
